plot(1)
clear()
1+1
plot(1+1)
plot(x*x)
x=1
y=5
plot(x,y)
plot(x,y)
ggplot(x,y)
ggplot()
library(forcats)
install.packages(forcats)
# Suscribete para más código en R https://bit.ly/2WNDhNR
1+1-1*(1+1-1)/1+1*(-1)
aguacate <- 15
# asigna los numeros a cada fruta
mango <- 10
manzana <- 5
aguacate <- 15
# resuelve el complejo acertijo
resultado <- 2*aguacate + 4*manzana + 1.5*mango
# imprime el resultado por pantalla
resultado
class(resultado)
class(nombre)
# crea una variable con algún nombre
nombre<- "Rafa"
class(nombre)
1 > 2
# cual es la clase de esto
class(1>2)
# suma nombre con resultado
nombre+resultado
# Antes de nada, limpiamos el workspace, por si hubiera alg?n dataset o informaci?n cargada
rm(list = ls())
# author: Alex RayÃ³n (alex.rayon@deusto.es)
# date: Marzo, 2020
# Antes de nada, limpiamos el workspace, por si hubiera alg?n dataset o informaci?n cargada
rm(list = ls())
# Cambiar el directorio de trabajo
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
# Cargamos todas las librerÃ�as necesarias
library(httr) # La librerÃ�a que nos ofrece R para hacer llamadas a una API
library(jsonlite) # Voy a llamar a la API que ha abierto Johns Hopkins
library(dplyr) #  Manipular datos tambiÃ©n funciona muy bien
install.packages("ggplot2")
library(ggplot2) #  LibrerÃ�a que contiene todas las funciones y caracterÃ�sticas para elaborar grÃ¡ficas
install.packages("gganimate")
install.packages("gifski")
install.packages("png")
install.packages("av")
library(gganimate) #  LibrerÃ�a me permite construir grÃ¡ficas animadas
library(forcats)
# Leemos todos los datos necesarios
# Detalles de la API: https://covid19api.com/
#   (1.1) Obtenemos los datos para EspaÃ±a: Confirmados
url  <- "https://api.covid19api.com/total/country/peru/status/confirmed"
request <- GET(url = url)
request$status_code
response <- content(request, as = "text", encoding = "UTF-8")
df <- fromJSON(response, flatten = TRUE) %>%
data.frame()
confirmadosSP <- select(df,
pais = Country,
fecha = Date,
numero = Cases)
confirmadosSP$fecha<-as.Date(confirmadosSP$fecha)
View(df)
View(confirmadosSP)
View(confirmadosSP)
install.packages(c("car", "metRology", "multcomp", "nortest", "outliers", "plotrix", "randtests", "vioplot"))
install.packages(c("dplyr", "forcats", "gganimate", "ggplot2", "httr", "jsonlite", "rstudioapi"))
#Lectura de datos
datos <- read.table(file.choose(),header=T)
head(datos)
#Prueba de Cochran y Grubs
library(outliers)
cochran.test(Desviacion~Metrologo,data=datos)
cochran.test(Desviacion~Metrologo,data=datos,inlying=TRUE)
medias <- stack(tapply(datos$Desviacion,datos$Metrologo,mean))
names(medias) <- c("Desviacion","Metrologo")
medias
grubbs.test(medias[,1],type=10,opposite = FALSE)
grubbs.test(medias[,1],type=10,opposite = TRUE)
#Se retiran los datos atípicos
datos_1 <- droplevels(subset(datos, Metrologo != "LSG"))
source('E:/Escritorio/MAR/R/R METROLOGIA/Pruebas de Hipótesis.R')
2.999999+0.000001
source('E:/Escritorio/RClase1b/ejemplo01.R', echo=TRUE)
source('E:/Escritorio/RClase1b/ejemplo01.R', echo=TRUE)
source('E:/Escritorio/RClase1b/ejemplo01.R', echo=TRUE)
source('E:/Escritorio/RClase1b/ejemplo01.R', echo=TRUE)
source('E:/Escritorio/RClase1b/ejemplo01.R', echo=TRUE)
source('E:/Escritorio/RClase1b/ejemplo01.R', echo=TRUE)
source('E:/Escritorio/RClase1b/ejemplo01.R', echo=TRUE)
setwd("E:\Escritorio\Clase2R4DS")
setwd("E:/Escritorio/Clase2R4DS")
getwd()
dir()
help(dir)
dir(pattern = "csv")
dir(pattern = R)
dir(pattern = "R")
dir(pattern = "R")
# Comentario
#En Rstudio la combinacion de teclas CTRL+SHIFT+N apertura un nuevo editor
#Modifico/seteo configuro el directorio de trabajo
setwd("E:/Escritorio/Clase2/")
# verificar wd wiorking directory
getwd()
#listar el contenido
dir()
help(dir)
dir(pattern = "csv")
dir(pattern = "R")
setwd("https://github.com/MarZapatta/Clase2")
setwd(E:/Escritorio/Clase2/")
setwd("E:/Escritorio/Clase2/")
#### Creacion de matrices ####
x1 <- c(2,4,5,8,1,12,23,34)
class(x1)
help(matrix)
# definicion de matrices
help(matrix)
mat1 <- matrix(data = 1:9, nrow = 3, ncol = 3)
mat2 <- matrix(data= 1.9, ncol = 3)
mat2 <- matrix(data= 1:9, ncol = 3)
mat3 <- matrix(data = 1:5 , nrow = 5)
mat3 <- matrix(data = 1:15 , nrow = 5)
mat3
#byrow = FALSE : lo primero que se llena son las columnas
mat3 <- matrix(data = 1:15 , nrow = 5, byrow = TRUE, dimnames = list(c("r1,r2,r3"),c("c1,c2,c3")))
#byrow = FALSE : lo primero que se llena son las columnas
mat3 <- matrix(data = 1:15 , nrow = 5, byrow = TRUE, dimnames = list(c("r1,r2,r3,r4,r5"),c("c1,c2,c3")))
#byrow = FALSE : lo primero que se llena son las columnas
mat3 <- matrix(data = 1:15 , nrow = 5, byrow = TRUE, dimnames = list(c("r1","r2","r3","r4","r5"),c("c1","c2","c3")))
mat3
class(mat3)
dim(mat3)
help(dim)
dimensiones <- dim(mat3)
dimensiones[1]
dimensiones[2]
colnames(mate3)
colnames(mat3)
colnames(mat3)[1]
rownames(mat3)
colnames(mat3) <- c("col1","col2","col3")
mat3
mat3
help(sample)
sample(1:129,9)
mat4 <- matrix(data = sample(1:129,9), ncol = 3)
mat4
mat4[2,2]
mat4[2,2]pi
mat4[2,2] <- pi
mat4
mat4[:,3]
mat4[,3]
mat4[3,]
-1:1/0
x <- NA
x <- runif(1,0,10)
x
if(x>5){
y <- TRUE
}
else {
y <- FALSE
}
if(x>5){
y <- TRUE
}else {
y <- FALSE
}
y
for(i in 1:5){
print(i)
}
sessionInfo()
install.packages(c("dplyr", "ggplot2"))
install.packages("extraDistr")
library(extraDistr)
help("extraDistr")
library(help= "extraDistr")
help("BetaPrime")
Nota1 <- runif(10, 1,19)
Nota2 <- sample(1:20,10)
MiPrimerDF <- data.frame(NOTAP = Nota1 , NOTAF= Nota2)
class(MiPrimerDF)
dim(MiPrimerDF)
str(MiPrimerDF)
View(MiPrimerDF)
MiPrimerDF$NOTAP
MiPrimerDF[[1]]
MiPrimerDF[,1]
help("readline")
dir()
gluc <- read.table(file="glucosa.txt",header = TRUE)
gluc
View(gluc)
class(gluc)
str(gluc)
colnames(gluc)
class(colnames(gluc))
gluc$glucosa
mean(gluc$glucosa)
median(gluc$glucosa)
sd(gluc$glucosa)
var(gluc$glucosa)
quantile(gluc$glucosa,probs = 0.1)
quantile(gluc$glucosa,probs = 0.5)
quantile(gluc$glucosa,probs = c(0.1,0.9))
gluc$temperatura
quantile(gluc$glucosa,probs = c(0.1,0.9))[1]
quantile(gluc$glucosa,probs = c(0.1,0.9))[2]
gluc$temperatura
plot(x =1:31,  y = gluc$temperatura)
help("plot")
help(plot)
help(plot)
plot(x =1:31,  y = gluc$temperatura, main = "Dataset glucosa.txt", xlab = "Indices", ylab = "Temperatura", type = 'l')
plot(x =1:31,  y = gluc$temperatura, main = "Dataset glucosa.txt", xlab = "Indices", ylab = "Temperatura", type = 'b')
plot(x =1:31,  y = gluc$temperatura, main = "Dataset glucosa.txt", xlab = "Indices", ylab = "Temperatura", type = 's')
plot(x =1:31,  y = gluc$temperatura, main = "Dataset glucosa.txt", xlab = "Indices", ylab = "Temperatura", type = 'l')
dir()
cloud <- read.table(file = "cloud.txt" , header = T)
View(cloud)
colnames(cloud)
str(cloud)
class(cloud)
cloud$Ispc
cloud$Cloudpt
help(hist)
hist(cloud$Cloudpt)
h_cloudpt <- hist(cloud$Cloudpt)
h_cloudpt
h_cloudpt$breaks
h_cloudpt$counts
help(hist)
range(cloud$Cloudpt)
h_cloudpt$breaks
b1 <- 20:34
b1
help(seq)
b2 <- seq(20,34,1)
b2
hist(cloud$Cloudpt , breaks = b1)
help("boxplot")
boxplot(cloud$Cloudpt)
bp_cloudpt <- boxplot(cloud$Cloudpt)
bp_cloudpt
rm(list = ls())
setwd("E:/Escritorio/Clase2")
dir()
rm(list = ls())  #para borrar los datos del environment
setwd("E:/Escritorio/Clase2")
dir()
retail <- read.csv(file = "RetailSales.csv.txt")
View(retail)
class(retail)
str(retail)
colnames(retail)
View(retail)
View
View(retail)
help("na.omit")
retail <- na.omit(retail)
retail
View(retail)
str(retail)
retail
retail[retail$Year==2000, ]
class(retail[retail$Year==2000, ])
retail[retail$Year==2000, ]$Sales
sum(retail[retail$Year==2000, ]$Sales)
unique(retail$Year)
unique(retail$Year)[1]
unique(retail$Year)[5:9]
ResumenSales <- data.frame(Yea= integer(), VentaTotal= double())
NuevaFila <- data.frame()
for(y in unique(retail$Year)){
print(y)
}
for(y in unique(retail$Year)){
NuevaFila <- data.frame(Year = y, VentaTotal= sum(retail[retail$Year==y, ]$Sales))
ResumenSales <- rbind(ResumenSales , NuevaFila)
}
View(ResumenSales)
View(NuevaFila)
plot(x= ResumenSales, y=ResumenSales$VentaTotal)
plot(x= ResumenSales$Year, y=ResumenSales$VentaTotal)
retail[retail$Month == "Jan",]
retail[retail$Month == "Jan", ]$Sales
unique(retail$Month)
for(m in retail$Month){
print(retail[retail$Month == m, ])
}
for(m in retail$Month){
print(m)
}
help("aggregate")
RetailMes <- aggregate(Sales ~ Month, data = retail, FUN = sum)
View(RetailMes)
RetailMes
RetailMes
RetailMes <- RetailMes[order(match(RetailMes$Month, month.abb))]
RetailMes <- RetailMes[order(match(RetailMes$Month, month.abb)), ]
RetailMes
help(table)
help("datasets")
rm(list = ls)
rm(list = ls())
getwd()
rm(list = ls())
getwd()
class(AirPassengers)
help(ts)
plot(AirPassengers)
library(help = "datasets")
class(CO2)
help(CO2)
help(CO2)
class(CO2)
str(CO2)
data(CO2)
library(car)
install.packages(c("backports", "car", "carData", "ellipsis", "glue", "haven", "maptools", "sp", "tinytex", "xfun"))
install.packages(c("boot", "class", "foreign", "KernSmooth", "MASS", "nlme", "nnet", "spatial"), lib="D:/R-4.0.0/library")
install.packages("car")
install.packages("carData")
library(car)
data(Prestige)
class(CO2)
help(CO2)
class(CO2)
str(CO2)
data(cars)
data(CO2)
library(car)
data(Prestige)
str(Prestige)
head(Prestige)
tail(Prestige)
summary(Prestige)
View(Prestige)
levels(Prestige$type)
Prestige[Prestige$type == NA, ]
Prestige[is.na(Prestige$type), ]
help("Prestige")
cor(Prestige[,-6])
help(cor)
library(corrplot)
install.packages("corrplot")
library(corrplot)
corrplot(Prestige[,-6])
corrplot(cor(Prestige[,-6]))
help(cor)
corrplot(cor(Prestige[,-6]))
library(readxl)
library(help= "readxl")
excel sheets("excel prueba.xlsx")
library(excel sheets)
rm(list = ls())
getwd()
dir()
dir(pattern = xlsx)
dir(pattern = "xlsx")
excel_sheets(path = "excel_prueba.xlsx")
excel_sheets(path = "excel_prueba.xlsx")[1]
excel_sheets(path = "excel_prueba.xlsx")[2]
excel_iris <- read_excel("excel_prueba.xlsx", sheet = "iris")
View(excel_iris)
excel_women <- read_excel("excel_prueba.xlsx",
sheet = excel_sheets(path = "excel_prueba.xlsx")[2],
col_names = FALSE)
excel_sheets(path = "excel_prueba.xlsx")
excel_sheets(path = "excel_prueba.xlsx")[1]
excel_sheets(path = "excel_prueba.xlsx")[2]
excel_iris <- read_excel("excel_prueba.xlsx", sheet = "iris")
excel_women <- read_excel("excel_prueba.xlsx",
sheet = excel_sheets(path = "excel_prueba.xlsx")[2],
col_names = FALSE)
str(excel_women)
colnames(excel_women)
colnames(excel_women)<- c("Col1","Col2")
excel_air <- read_excel(path = "excel_prueba.xlsx", sheet = "airquality")
help("read_excel")
excel_air <- read_excel(path = "excel_prueba.xlsx", sheet = "airquality", skip = 3)
View(excel_air)
colnames(excel_air)
excel_air$Observaciones
class(excel_air$Observaciones)
sum(excel_air$Observaciones)
sum(excel_air$Observaciones, na.rm= TRUE)
sum(excel_air$Fechas, na.rm= TRUE) #hay cero elementos no -NA
excel_air[,-c(1,6,11)]
excel_air <- read_excel(path = "excel_prueba.xlsx", sheet = "airquality", skip = 3, na= '-')
excel_air[,-c(1,6,11)]
View(excel_air)
excel_air <- read_excel(path = "excel_prueba.xlsx", sheet = "airquality", skip = 3, na= '-')
excel_air[,-c(1,6,11)]
excel_air <- na.omit(excel_air)
excel_air <- read_excel(path = "excel_prueba.xlsx", sheet = "airquality", skip = 3, na= '-')
excel_air[,-c(1,6,11)]
excel_air <- na.omit(excel_air)
View(excel_air)
excel_air <- read_excel(path = "excel_prueba.xlsx", sheet = "airquality", skip = 3, na = '-')
excel_air[,-c(1,6,11)]
excel_air <- na.omit(excel_air)
View(excel_air)
excel_air <- read_excel(path = "excel_prueba.xlsx", sheet = "airquality", skip = 3, na = '-')
excel_air[,-c(1,6,11)]
excel_air <- na.omit(excel_air)
View(excel_air)
excel_air <- read_excel(path = "excel_prueba.xlsx", sheet = "airquality", skip = 3, na.omit = '-')
excel_air[,-c(1,6,11)]
excel_air <- na.omit(excel_air)
excel_air <- read_excel(path = "excel_prueba.xlsx", sheet = "airquality", skip = 3, na = '-')
excel_air[,-c(1,6,11)]
excel_air <- na.omit(excel_air)
View(excel_air)
excel_air <- read_excel(path = "excel_prueba.xlsx", sheet = "airquality", skip = 3, na = '-')
excel_air[ ,-c(1,6,11)]
excel_air <- na.omit(excel_air)
excel_air <- na.omit(excel_air)
excel_air <- read_excel(path = "excel_prueba.xlsx", sheet = "airquality", skip = 3, na = '-')
excel_air[ ,-c(1,6,11)]
excel_air <- na.omit(excel_air)
View(excel_air)
excel_air <- na.omit(excel_air)
excel_air <- na.omit("excel_air)
excel_air <- read_excel(path = "excel_prueba.xlsx", sheet = "airquality", skip = 3, na = '-')
excel_air[ ,-c(1,6,11)]
